//Code tested in Wemos D1 R1

#include <ESP8266WiFi.h>
#include <WiFiClient.h>
#include <ESPMail.h>
ESPMail mail;

//ESP Web Server Library to host a web page
#include <ESP8266WebServer.h>
 
//---------------------------------------------------------------
//Our HTML webpage contents in program memory
const char MAIN_page[] PROGMEM = R"=====(
<!DOCTYPE html>
<html>
<body>
<center>
<h1>WiFi LED ON/OFF demo with EMAIL SEND TEST PAGE</h1><br>
Click to turn <a href="ledOn" target="myIframe">LED ON</a><br>
Click to turn <a href="ledOff" target="myIframe">LED OFF</a><br>
Click to send EMAIL <a href="sendMail" target="myIframe">SEND MAIL</a><br>
LED State:<iframe name="myIframe" width="100" height="25" frameBorder="0"><br>
MAIL State:<iframe name="myIframe" width="100" height="25" frameBorder="0"><br>
</center>
 
</body>
</html>
)=====";
 
//SSID and Password of your WiFi router
const char* ssid = "YOURSSID";
const char* password = "YOURSSIDPASSWD";
 
//Declare a global object variable from the ESP8266WebServer class.
ESP8266WebServer server(80); //Server on port 80
 
//===============================================================
// This routine is executed when you open its IP in browser
//===============================================================
void handleRoot() {
 Serial.println("You called root page");
 String s = MAIN_page; //Read HTML contents
 server.send(200, "text/html", s); //Send web page
}
 
void handleLEDon() { 
 Serial.println("LED on page");
 digitalWrite(LED_BUILTIN,LOW); //LED is connected in reverse
 server.send(200, "text/html", "ON"); //Send ADC value only to client ajax request
}
 
void handleLEDoff() { 
 Serial.println("LED off page");
 digitalWrite(LED_BUILTIN,HIGH); //LED off
 server.send(200, "text/html", "OFF"); //Send ADC value only to client ajax request
}

void handlesendMail() { 
  
  Serial.println("Sending MAIL");
  delay(500);

  mail.setSubject("YOURGMAILMAIL@gmail.com", "ARDUINO AUTOMATIC TEST");
  mail.addTo("YOURGMAILTOMAIL@gmail.com");
  //mail.addCC("cc@example.com");
  //mail.addBCC("bcc@example.com"); 
  //mail.addAttachment("test.txt", "This is content of attachment.");

  mail.setBody("This is an example e-mail from arduino with wifi.");
  //mail.setHTMLBody("This is an example html <b>e-mail<b/>.\n<u>Regards Grzesiek</u>");
  
  mail.enableDebugMode();
  if (mail.send("192.168.0.12(STUNNEL IP)", 25(STUNNEL PORT), "YOURGMAILMAIL@gmail.com", "YOURGMAILPASSWD") == 0)
  {
    Serial.println("Mail send OK");
  } else {
    Serial.println("Mail send FAIL");
  } 

 server.send(200, "text/html", "SENT"); //Send ADC value only to client ajax request
}
//==============================================================
//                  SETUP
//==============================================================
void setup(void){
  Serial.begin(115200);
  
  WiFi.begin(ssid, password);     //Connect to your WiFi router
  Serial.println("");
 
  //Onboard LED port Direction output
  pinMode(LED_BUILTIN,OUTPUT); 
  //Power on LED state off
  digitalWrite(LED_BUILTIN,HIGH);
  
  // Wait for connection
  while (WiFi.status() != WL_CONNECTED) {
    delay(2000);
    Serial.print(".");
  }
 
  //If connection successful show IP address in serial monitor
  Serial.println("");
  Serial.println("Connected to ");
  Serial.println(ssid);
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());  //IP address assigned to your ESP
 
  server.on("/", handleRoot);       //Which routine to handle at root location. This is display page
  server.on("/ledOn", handleLEDon); //as Per  <a href="ledOn">, Subroutine to be called
  server.on("/ledOff", handleLEDoff);
  server.on("/sendMail", handlesendMail);
 
  server.begin();                  //Start server
  Serial.println("HTTP server started");

  // Load and start mail function
  mail.begin();
  Serial.println("Mail OPTS Loaded");
  
}
//==============================================================
//                     LOOP
//==============================================================
void loop(void){
  server.handleClient();          //Handle client requests
}
